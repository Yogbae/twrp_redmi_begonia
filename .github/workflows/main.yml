name: Building TWRP Android 11

on: # [push]
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  watch:
    types: [started]

env:
  MANIFEST: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1
  DEVICE: begonia
  DT_LINK: https://github.com/ZyCromerZ/twrp_redmi_begonia -b android-11.0
  DT_PATH: device/redmi/begonia
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  TARGET: recoveryimage
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: "Cleanup Environment"
         uses: rokibhasansagar/slimhub_actions@main

       - name: Initializing environment
         run: |
              curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id="-1001346805320" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="Initializing environment for compiling TWRP"
              sudo -E apt-get clean
              sudo -E apt-get -qq update
              sudo -E apt-get -qq install curl libstdc++6 git wget repo rsync aria2
              git config --global user.name "${{github.actor}}"
              git config --global user.email "neetroid97@gmail.com"
              git clone https://gitlab.com/OrangeFox/misc/scripts.git --depth=1 --single-branch
              cd scripts
              sudo -E bash setup/android_build_env.sh
              sudo -E bash setup/install_android_sdk.sh
            
       - name: Sync TWRP A11 source and device tree
         run: |
              curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id="-1001346805320" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="Sync TWRP A11 source and device tree"
              mkdir work
              cd work
              repo init -u $MANIFEST --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips
              repo sync -j4
              git clone $DT_LINK --single-branch $DT_PATH
             
       - name: Building TWRP
         run: |
              curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id="-1001346805320" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="Building TWRP"
              cd work
              . build/envsetup.sh && lunch twrp_$DEVICE-eng 
              repo sync -j4
              export ALLOW_MISSING_DEPENDENCIES=true && mka $TARGET -j4
             
       - name: Uploading recovery image
         run: |
              curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id="-1001346805320" -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="Uploading recovery image"
              cd work/out/target/product/$DEVICE
              ZipName="[$(date +"%Y%m%d")]TWRP-begonia-3.6.2_12.zip"
              sudo zip -r9 "$ZipName" recovery.img
              ls > ls.txt
              curl -F chat_id="-1001346805320" -F document=@ls.txt -F parse_mode=markdown https://api.telegram.org/bot$BOT_TOKEN/sendDocument -F caption="Check it out @clurfe"
              curl -F chat_id="-1001529557479" -F document=@$ZipName https://api.telegram.org/bot$BOT_TOKEN/sendDocument -F caption="Please test it @clurfe"
               curl -sL https://git.io/file-transfer | sh
               ./transfer wet $ZipName
               ./transfer wet recovery.img